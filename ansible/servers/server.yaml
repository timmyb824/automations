- name: Common Playbook
  hosts: all
  become: true

  vars_files:
    - ./vars/common.yaml

  pre_tasks:
    - name: Play needed pre-tasks in order
      ansible.builtin.include_tasks: "{{ item }}"
      loop:
        - ./tasks/update_pkgs.yaml
        - ./tasks/new_users.yaml
  roles:
    # https://github.com/artis3n/ansible-role-tailscale
    - role: artis3n.tailscale
      vars:
        TAILSCALE_AUTHKEY: "{{ lookup('env', 'TAILSCALE_AUTHKEY') }}"
        # tailscale_args: "--ssh"

    # https://github.com/staticdev/ansible-role-pyenv
    - role: staticdev.pyenv
      vars:
        pyenv_version: "HEAD"
        pyenv_env: "user"
        pyenv_shellrc_file: "/home/{{ instance_owner }}/.bashrc"
        pyenv_path: "/home/{{ instance_owner }}/.pyenv"
        pyenvrc_path: "/home/{{ instance_owner }}"
        pyenv_owner: "{{ instance_owner }}"
        pyenv_global:
          - 3.10.0
        pyenv_enable_autocompletion: false
        pyenv_python_versions:
          - 3.10.0
        pyenv_virtualenvs:
          - venv_name: homelab
            py_version: 3.10.0

    # https://github.com/geerlingguy/ansible-role-docker
    # docker_daemon_json did not work with this role
    - role: geerlingguy.docker
      vars:
        docker_users:
          - "{{ instance_owner }}"
          - "{{ ssh_remote_user }}"
        docker_daemon_json:
          log-driver: "gelf"
          log-opts:
            gelf-address: "{{ lookup('env','GELF_ADDRESS') }}"
          # storage-driver: "devicemapper"
          # log-opts:
          #   max-size: "100m"

    # https://github.com/stephdewit/ansible-nvm
    - role: stephdewit.nvm
      become: true
      become_user: "{{ instance_owner }}"
      vars:
        nvm_version: 'latest'
        nvm_node_version: 'latest'
        nvm_install_path: "/home/{{ instance_owner }}/.nvm"
        nvm_shell_init_file: "/home/{{ instance_owner }}/.bashrc"
      environment:
        NVM_DIR: /home/{{ instance_owner }}/.nvm

    # https://github.com/ansible-collections/community.zabbix/tree/main/roles/zabbix_agent
    # This currently fails due to "Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead"
    # - role: community.zabbix.zabbix_agent
    #   become: true
    #   become_user: "{{ instance_owner }}"
    #   dependencies:
    #     - role: geerlingguy.docker
    #   vars:
    #     ZABBIX_AGENT_SERVER: 192.168.86.203
    #     ZABBIX_AGENT_SERVERactive: 192.168.86.203
    #     ZABBIX_API_SERVER_URL: http://192.168.86.203:8001
    #     zabbix_api_use: true # use zabbix_api_create_hosts and/or zabbix_api_create_hostgroup from 0.8.0
    #     zabbix_api_login_user: Admin
    #     zabbix_api_login_pass: "{{ ssh_password_encrypted }}"
    #     zabbix_agent_host_state: present
    #     zabbix_host_groups:
    #       - Linux Servers
    #       - Docker
    #     zabbix_agent_link_templates:
    #       - Template OS Linux
    #       - Template App Docker
        # zabbix_agent_macros:
        #   - macro_key: apache_type
        #     macro_value: reverse_proxy
        #     macro_type: text
        # zabbix_agent_tags:
        #   - tag: environment
        #     value: test

    - role: ./roles/prometheus
      become_user: "{{ instance_owner }}"
      dependencies:
        - role: geerlingguy.docker
      vars:
        hostname: "{{ hostname }}"
        prom_user: "{{ instance_owner }}"

  tasks:
    - name: Play needed tasks in order
      ansible.builtin.include_tasks: "{{ item }}"
      loop:
        - ./tasks/rsyslog_graylog.yaml

  post_tasks:
    - name: Play needed post-tasks in order
      ansible.builtin.include_tasks: "{{ item }}"
      loop:
        - ./tasks/extra_pkgs.yaml
